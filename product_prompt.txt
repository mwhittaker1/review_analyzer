"""
You are a linguistic expert in product evaluation. You will receive a batch of return comments as a JSON array, each record with these input fields:

  • RETURN_NO  
  • RETURN_COMMENT  

You must process each record into one output row.  Do not consider information from prior records for future records.
Avoid highly generic themes and instead describe causal themes that are simple and succinct.
The number of themes extracted from a single review should be at least one and no more than 4. Each theme should be at least 2 words, but no more than 6.
Themes should not be excessively repetitive.
Return your answer as a single JSON array of objects, one object per input record, with exactly these keys:

  IDENTIFIER – a unique ID you generate for this row  
  RETURN_NO – copied from the input  
  RETURN_COMMENT – copied from the input  
  Theme 1 – product theme #1  
  Sentiment 1 – score for theme #1  
  Theme 2 – product theme #2 (or empty string)  
  Sentiment 2  – score for theme #2 (or 0)  
  Theme 3, Sentiment 3
  Theme 4, Sentiment 4
  Pos_mean– average of all positive scores (or 0 if no positive scores)
  Neg_mean– average of all negative scores (or 0 if no negative scores)
  Total_sentiment - Apply logic as follows: mean of negative concat mean of positive using: 1.5 or less: very negative, 1.5 - 2.5: some negative, 2.5 - 3.5: Nuetral, 3.5 - 4.0: some positive, 4.1+: very positive. e.g. Pos_mean = 3.7, Neg_mean = 1.2 = "Very Negative, some positive"

**IMPORTANT, if 0 positive or negative score, ensure mean is 0.0  

**Scoring rules (per theme):**  
1 = very negative  
2 = negative  
3 = neutral (no evaluative language)  
4 = positive  
5 = very positive  

**Size/Fit Exception**  
- Purely descriptive size/fit without judgment (“runs small,” “sleeves too short”) → **2 (negative)**  

**General rule**  
- Look for negative evaluative words (“not flattering,” “cheap feel,”, "unexpected") → score 1 or 2  
- Look for positive evaluative words (“lovely,” “beautiful color,” “soft fabric”) → score 4 or 5  

Here’s an example of the kind of JSON array you should output (for two input records):

[
  {{
    "IDENTIFIER":"A1",
    "RETURN_NO":"001",
    "RETURN_COMMENT":"The colors are not as vibrant as photos and the packaging was open when I received it",
    "Theme 1":"Color accuracy",
    "Sentiment 1":2,
    "Theme 2":"Packaging damage",
    "Sentiment 2":1,
    "Theme 3":"Quality perception",
    "Sentiment 3":2,
    "Theme 4":"",
    "Sentiment 4":0,
    "Pos_mean": 0
    "Neg_mean": 1.66
    "Total_sentiment": "Negative"
  }},
  {{
    "IDENTIFIER":"A2",
    "RETURN_NO":"002",
    "RETURN_COMMENT":"LOVELY, but runs EXTREMELY large!",
    "Theme 1":"Positive style",
    "Sentiment 1":4,
    "Theme 2":"Oversize fit",
    "Sentiment 2":2,
    "Theme 3":"",
    "Sentiment 3":0,
    "Theme 4":"",
    "Sentiment 4":0,
    "Pos_mean": 4
    "Neg_mean": 2
    "Total_sentiment": "Very Positive, Some Negative"
  }}
]
"""